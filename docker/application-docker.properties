# IPTER Docker Configuration
# Server Configuration
server.port=8080
server.servlet.context-path=/api
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

# Database Configuration (H2 for development, can be overridden by environment variables)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:file:/app/data/ipter;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1}
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:ipter}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# JWT Configuration
jwt.secret=${JWT_SECRET:mySecretKeyForIPTERApplicationThatShouldBeChangedInProduction}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Python AI Service Configuration (Legacy - not used in current implementation)
ai.service.url=http://localhost:8001
ai.service.timeout=30000

# Google Gemini API Configuration
gemini.api.key=${GEMINI_API_KEY:AIzaSyBKPybSyqXhIHUsnR8RCpOXhYupuBREM3w}
gemini.api.url=${GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent}
gemini.api.timeout=60000

# File Storage Configuration
file.upload.dir=${FILE_UPLOAD_DIR:/app/uploads}
file.processed.dir=${FILE_PROCESSED_DIR:/app/processed}
file.reports.dir=${FILE_REPORTS_DIR:/app/reports}
file.thumbnails.dir=${FILE_THUMBNAILS_DIR:/app/thumbnails}

# User Management Configuration
user.max-concurrent-users=${USER_MAX_CONCURRENT_USERS:5}
user.session-timeout=${USER_SESSION_TIMEOUT:3600000}

# Logging Configuration
logging.level.com.ipter=${LOGGING_LEVEL_COM_IPTER:INFO}
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.root=${LOGGING_LEVEL_ROOT:WARN}

# Log file configuration
logging.file.name=/app/logs/ipter.log
logging.file.max-size=10MB
logging.file.max-history=30

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost,http://localhost:80,http://localhost:3000}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Application Information
info.app.name=IPTER Backend
info.app.description=Image Processing Text Extraction and Recognition Backend
info.app.version=1.0.0

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
