# Docker Compose file for IPTER Application
# Note: version field is now obsolete in Docker Compose v2+

services:
  ipter-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ramkousik/ipter:latest
    container_name: ipter-application
    ports:
      - "80:80"      # Frontend (nginx)
      - "8080:8080"  # Backend API
    environment:
      # Timezone Configuration
      - TZ=Asia/Kolkata

      # Database Configuration - PostgreSQL for production
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ipter-db:5432/ipter
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=ipter
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-ipter_password}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - H2_CONSOLE_ENABLED=false

      # Gemini API Configuration
      - GEMINI_API_KEY=${GEMINI_API_KEY:-AIzaSyBKPybSyqXhIHUsnR8RCpOXhYupuBREM3w}
      - GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent

      # File Storage Configuration
      - FILE_UPLOAD_DIR=/app/uploads
      - FILE_PROCESSED_DIR=/app/processed
      - FILE_REPORTS_DIR=/app/reports
      - FILE_THUMBNAILS_DIR=/app/thumbnails

      # Security Configuration
      - JWT_SECRET=${JWT_SECRET:-mySecretKeyForIPTERApplicationThatShouldBeChangedInProduction}
      - JWT_EXPIRATION=86400000

      # Application Configuration
      - SERVER_PORT=8080
      - USER_MAX_CONCURRENT_USERS=5
      - USER_SESSION_TIMEOUT=3600000

      # Logging Configuration
      - LOGGING_LEVEL_COM_IPTER=INFO
      - LOGGING_LEVEL_ROOT=WARN

      # CORS Configuration
      - CORS_ALLOWED_ORIGINS=http://localhost,http://localhost:80,http://localhost:3000

    volumes:
      - ipter-uploads:/app/uploads
      - ipter-processed:/app/processed
      - ipter-reports:/app/reports
      - ipter-thumbnails:/app/thumbnails
      - ipter-logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    depends_on:
      - ipter-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  # PostgreSQL Database for production use
  ipter-db:
    image: postgres:15-alpine
    container_name: ipter-database
    environment:
      # Timezone Configuration
      - TZ=Asia/Kolkata
      - POSTGRES_DB=ipter
      - POSTGRES_USER=ipter
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ipter_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ipter-postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ipter -d ipter"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  ipter-postgres-data:
    driver: local
  ipter-uploads:
    driver: local
  ipter-processed:
    driver: local
  ipter-reports:
    driver: local
  ipter-thumbnails:
    driver: local
  ipter-logs:
    driver: local

networks:
  default:
    name: ipter-network
